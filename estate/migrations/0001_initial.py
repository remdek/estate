# Generated by Django 3.1.3 on 2020-12-14 04:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('attach', '0002_image_owner'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('locales', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EstateImageCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Header')),
                ('field1', models.CharField(blank=True, max_length=100, verbose_name='Field 1')),
                ('field2', models.CharField(blank=True, max_length=100, verbose_name='Field 2')),
                ('field3', models.CharField(blank=True, max_length=100, verbose_name='Field 3')),
                ('field4', models.CharField(blank=True, max_length=100, verbose_name='Field 4')),
                ('field5', models.CharField(blank=True, max_length=100, verbose_name='Field 5')),
                ('total', models.CharField(blank=True, max_length=100, verbose_name='Field 5')),
            ],
        ),
        migrations.CreateModel(
            name='EstateProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('input', 'Without Childrens'), ('select', 'Children Select'), ('multi', 'Multiple Childrens')], db_index=True, max_length=8, verbose_name='Estate Property Select Type')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('name', models.ManyToManyField(related_name='estateProperty_name', to='locales.InputLang')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estateProperty_children', to='estate.estateproperty')),
            ],
        ),
        migrations.CreateModel(
            name='EstatePropertyOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ManyToManyField(related_name='estatePropertyOption_name', to='locales.InputLang')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estatePropertyOption_children', to='estate.estateproperty')),
            ],
        ),
        migrations.CreateModel(
            name='EstateStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ManyToManyField(related_name='estateStatus_name', to='locales.InputLang')),
            ],
        ),
        migrations.CreateModel(
            name='EstatePropertyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.CharField(max_length=20, verbose_name='Input value')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EstatePropertyValue_children', to='estate.estateproperty')),
                ('select', models.ManyToManyField(blank=True, related_name='estatePropertyValue_select', to='estate.EstatePropertyOption')),
            ],
        ),
        migrations.CreateModel(
            name='EstateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('robots', models.BooleanField(db_index=True, default=True, verbose_name='Robots')),
                ('description', models.ManyToManyField(related_name='estateCategory_description', to='locales.TextLang')),
                ('name', models.ManyToManyField(related_name='estateCategory_name', to='locales.InputLang')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estateCategory_children', to='estate.estatecategory')),
                ('props', models.ManyToManyField(related_name='estateCategory_props', to='estate.EstateProperty')),
                ('title', models.ManyToManyField(related_name='estateCategory_title', to='locales.InputLang')),
            ],
            options={
                'verbose_name': 'Categories',
                'verbose_name_plural': 'Categories',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Estate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=250, verbose_name='Street')),
                ('address', models.CharField(max_length=200, verbose_name='Address')),
                ('address_num', models.CharField(max_length=10, verbose_name='Address Num')),
                ('hide_address_num', models.BooleanField(default=False, verbose_name='Hide address Number')),
                ('flat', models.CharField(blank=True, max_length=10, verbose_name='Flat')),
                ('hide_flat_num', models.BooleanField(default=False, verbose_name='Hide address Number')),
                ('place', models.CharField(max_length=200, verbose_name='Place')),
                ('lat', models.CharField(blank=True, max_length=15, verbose_name='Latitude')),
                ('lon', models.CharField(blank=True, max_length=15, verbose_name='Longitude')),
                ('cadastral', models.CharField(blank=True, max_length=20, verbose_name='Cadastral Number')),
                ('km_from_city', models.PositiveIntegerField(blank=True, null=True, verbose_name='Km from City')),
                ('area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Area')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('price_m2', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Price for m2')),
                ('comission', models.PositiveIntegerField(blank=True, null=True, verbose_name='Comission')),
                ('comission_pay_value', models.CharField(choices=[('%', 'Percent'), ('€', 'Euro')], default='%', max_length=8, verbose_name='Comission payment value')),
                ('deposit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Deposit')),
                ('deposit_pay_value', models.CharField(choices=[('%', 'Percent'), ('€', 'Euro')], default='%', max_length=8, verbose_name='Deposit payment value')),
                ('prepayment', models.PositiveIntegerField(blank=True, null=True, verbose_name='Prepayment')),
                ('prepayment_pay_value', models.CharField(choices=[('%', 'Percent'), ('€', 'Euro')], default='%', max_length=8, verbose_name='Comission payment value')),
                ('summer_payments', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Summer payments')),
                ('winter_payments', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Winter payments')),
                ('towater_distance', models.CharField(blank=True, max_length=8, verbose_name='Distance to water')),
                ('robots', models.BooleanField(db_index=True, default=True, verbose_name='Robots')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('broker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_broker', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(related_name='estate_categories', to='estate.EstateCategory')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estate_country', to='locales.location')),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estate_county', to='locales.location')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_CreatedBy', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_district', to='locales.location')),
                ('images', models.ManyToManyField(blank=True, related_name='estate_images', to='attach.Image')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_owner', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_status', to='estate.estatestatus')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estate_town', to='locales.location')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_type', to='estate.estatecategory')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estate_UpdatedBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estate Objects',
                'verbose_name_plural': 'Estate Objects',
                'ordering': ['id'],
            },
        ),
    ]
